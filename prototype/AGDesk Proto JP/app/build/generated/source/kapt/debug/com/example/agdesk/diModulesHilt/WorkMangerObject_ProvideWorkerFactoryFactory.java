// Generated by Dagger (https://dagger.dev).
package com.example.agdesk.diModulesHilt;

import com.example.agdesk.WorkManger.SyncWorkerFactory;
import com.example.agdesk.repository.NetworkRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class WorkMangerObject_ProvideWorkerFactoryFactory implements Factory<SyncWorkerFactory> {
  private final Provider<NetworkRepository> networkRepositoryProvider;

  public WorkMangerObject_ProvideWorkerFactoryFactory(
      Provider<NetworkRepository> networkRepositoryProvider) {
    this.networkRepositoryProvider = networkRepositoryProvider;
  }

  @Override
  public SyncWorkerFactory get() {
    return provideWorkerFactory(networkRepositoryProvider.get());
  }

  public static WorkMangerObject_ProvideWorkerFactoryFactory create(
      Provider<NetworkRepository> networkRepositoryProvider) {
    return new WorkMangerObject_ProvideWorkerFactoryFactory(networkRepositoryProvider);
  }

  public static SyncWorkerFactory provideWorkerFactory(NetworkRepository networkRepository) {
    return Preconditions.checkNotNullFromProvides(WorkMangerObject.INSTANCE.provideWorkerFactory(networkRepository));
  }
}
